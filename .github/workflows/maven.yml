# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java build and push on docker hub

on:
#   push:
#     branches: [ "master" ]
#   pull_request:
#     branches: [ "master" ]
    workflow_dispatch:
#  env:
#       IMAGE_TAG: ${{ github.sha }}
#       KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
#   DOCKER_USER: ${{secrets.DOCKER_HUB_USERNAME}}
#   DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}                                                                                               
#       RELEASE_IMAGE: 7011347758/test${{ github.sha }}

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
      
      
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: my-java-app.jar
        path: my-java-app.jar
        
    
#     - name: Configure AWS credentials
#       uses: aws-actions/configure-aws-credentials@v1
#       with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ap-south-1
    
    - name: Generate tags
      id: docker_tags
      uses: anothrNick/github-tag-action@1.40.0
      env:
         GITHUB_TOKEN: ${{ secrets.TOKEN }}
         WITH_V: true
         
    - name: Build and Push Docker Image
      uses: mr-smithers-excellent/docker-build-push@v5.8
      with:
          image: 7011347758/test
          tags: ${{ steps.docker_tags.outputs.tag }}
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
